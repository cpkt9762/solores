//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-16
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

//!Event: TokenCreatedEvent
#[allow(unused_imports)]
use solana_pubkey::Pubkey;
pub const TOKEN_CREATED_EVENT_EVENT_DISCM: [u8; 8] =
    [96u8, 122u8, 113u8, 138u8, 50u8, 227u8, 149u8, 57u8];
#[derive(borsh::BorshDeserialize, borsh::BorshSerialize, Clone, Debug, PartialEq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct TokenCreatedEvent {
    pub discriminator: [u8; 8],
    pub name: String,
    pub symbol: String,
    pub uri: String,
}
impl Default for TokenCreatedEvent {
    fn default() -> Self {
        Self {
            discriminator: TOKEN_CREATED_EVENT_EVENT_DISCM,
            name: Default::default(),
            symbol: Default::default(),
            uri: Default::default(),
        }
    }
}
impl TokenCreatedEvent {
    pub fn try_to_vec(&self) -> std::io::Result<Vec<u8>> {
        borsh::to_vec(self)
    }
    pub fn from_bytes(data: &[u8]) -> Result<Self, std::io::Error> {
        borsh::BorshDeserialize::deserialize(&mut &data[..])
            .map_err(|e| std::io::Error::new(std::io::ErrorKind::InvalidData, e.to_string()))
    }
}
