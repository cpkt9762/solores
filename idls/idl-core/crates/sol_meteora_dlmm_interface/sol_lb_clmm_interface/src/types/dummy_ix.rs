//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-16
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

//!DummyIx
#[allow(unused_imports)]
use solana_pubkey::Pubkey;
#[derive(borsh::BorshDeserialize, borsh::BorshSerialize, Clone, Debug, PartialEq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct DummyIx {
    #[cfg_attr(feature = "serde", serde(rename = "_pair_status"))]
    pub pair_status: crate::types::PairStatus,
    #[cfg_attr(feature = "serde", serde(rename = "_pair_type"))]
    pub pair_type: crate::types::PairType,
    #[cfg_attr(feature = "serde", serde(rename = "_activation_type"))]
    pub activation_type: crate::types::ActivationType,
    #[cfg_attr(feature = "serde", serde(rename = "_token_program_flag"))]
    pub token_program_flag: crate::types::TokenProgramFlags,
    #[cfg_attr(feature = "serde", serde(rename = "_resize_side"))]
    pub resize_side: crate::types::ResizeSide,
    #[cfg_attr(feature = "serde", serde(rename = "_rounding"))]
    pub rounding: crate::types::Rounding,
}
impl Default for DummyIx {
    fn default() -> Self {
        Self {
            pair_status: Default::default(),
            pair_type: Default::default(),
            activation_type: Default::default(),
            token_program_flag: Default::default(),
            resize_side: Default::default(),
            rounding: Default::default(),
        }
    }
}
impl DummyIx {
    pub fn try_to_vec(&self) -> std::io::Result<Vec<u8>> {
        borsh::to_vec(self)
    }
    pub fn from_bytes(data: &[u8]) -> Result<Self, std::io::Error> {
        borsh::from_slice(data)
            .map_err(|e| std::io::Error::new(std::io::ErrorKind::InvalidData, e.to_string()))
    }
}
