//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-16
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

//! Anchor instructions module
//! Generated instruction definitions and client functions
//! Each instruction is defined in its own file
//!
//! This module provides precise imports to avoid naming conflicts
//! and improve compile times by avoiding glob imports.
#[allow(unused_imports)]
use solana_pubkey::Pubkey;
pub mod accept_owner;
pub use accept_owner::{
    accept_owner_ix, accept_owner_ix_with_program_id, AcceptOwnerIxData, AcceptOwnerKeys,
    ACCEPT_OWNER_IX_ACCOUNTS_LEN, ACCEPT_OWNER_IX_DISCM,
};
pub mod approve_strategy;
pub use approve_strategy::{
    approve_strategy_ix, approve_strategy_ix_with_program_id, ApproveStrategyIxData,
    ApproveStrategyKeys, APPROVE_STRATEGY_IX_ACCOUNTS_LEN, APPROVE_STRATEGY_IX_DISCM,
};
pub mod change_amp_factor;
pub use change_amp_factor::{
    change_amp_factor_ix, change_amp_factor_ix_with_program_id, ChangeAmpFactorIxData,
    ChangeAmpFactorKeys, CHANGE_AMP_FACTOR_IX_ACCOUNTS_LEN, CHANGE_AMP_FACTOR_IX_DISCM,
};
pub mod change_max_supply;
pub use change_max_supply::{
    change_max_supply_ix, change_max_supply_ix_with_program_id, ChangeMaxSupplyIxData,
    ChangeMaxSupplyKeys, CHANGE_MAX_SUPPLY_IX_ACCOUNTS_LEN, CHANGE_MAX_SUPPLY_IX_DISCM,
};
pub mod change_swap_fee;
pub use change_swap_fee::{
    change_swap_fee_ix, change_swap_fee_ix_with_program_id, ChangeSwapFeeIxData, ChangeSwapFeeKeys,
    CHANGE_SWAP_FEE_IX_ACCOUNTS_LEN, CHANGE_SWAP_FEE_IX_DISCM,
};
pub mod change_swap_fee_privileged;
pub use change_swap_fee_privileged::{
    change_swap_fee_privileged_ix, change_swap_fee_privileged_ix_with_program_id,
    ChangeSwapFeePrivilegedIxData, ChangeSwapFeePrivilegedKeys,
    CHANGE_SWAP_FEE_PRIVILEGED_IX_ACCOUNTS_LEN, CHANGE_SWAP_FEE_PRIVILEGED_IX_DISCM,
};
pub mod close_strategy;
pub use close_strategy::{
    close_strategy_ix, close_strategy_ix_with_program_id, CloseStrategyIxData, CloseStrategyKeys,
    CLOSE_STRATEGY_IX_ACCOUNTS_LEN, CLOSE_STRATEGY_IX_DISCM,
};
pub mod create_strategy;
pub use create_strategy::{
    create_strategy_ix, create_strategy_ix_with_program_id, CreateStrategyIxData,
    CreateStrategyKeys, CREATE_STRATEGY_IX_ACCOUNTS_LEN, CREATE_STRATEGY_IX_DISCM,
};
pub mod deposit;
pub use deposit::{
    deposit_ix, deposit_ix_with_program_id, DepositIxData, DepositKeys, DEPOSIT_IX_ACCOUNTS_LEN,
    DEPOSIT_IX_DISCM,
};
pub mod exec_strategy;
pub use exec_strategy::{
    exec_strategy_ix, exec_strategy_ix_with_program_id, ExecStrategyIxData, ExecStrategyKeys,
    EXEC_STRATEGY_IX_ACCOUNTS_LEN, EXEC_STRATEGY_IX_DISCM,
};
pub mod initialize;
pub use initialize::{
    initialize_ix, initialize_ix_with_program_id, InitializeIxData, InitializeKeys,
    INITIALIZE_IX_ACCOUNTS_LEN, INITIALIZE_IX_DISCM,
};
pub mod pause;
pub use pause::{
    pause_ix, pause_ix_with_program_id, PauseIxData, PauseKeys, PAUSE_IX_ACCOUNTS_LEN,
    PAUSE_IX_DISCM,
};
pub mod reject_owner;
pub use reject_owner::{
    reject_owner_ix, reject_owner_ix_with_program_id, RejectOwnerIxData, RejectOwnerKeys,
    REJECT_OWNER_IX_ACCOUNTS_LEN, REJECT_OWNER_IX_DISCM,
};
pub mod shutdown;
pub use shutdown::{
    shutdown_ix, shutdown_ix_with_program_id, ShutdownIxData, ShutdownKeys,
    SHUTDOWN_IX_ACCOUNTS_LEN, SHUTDOWN_IX_DISCM,
};
pub mod swap;
pub use swap::{
    swap_ix, swap_ix_with_program_id, SwapIxData, SwapKeys, SWAP_IX_ACCOUNTS_LEN, SWAP_IX_DISCM,
};
pub mod swap_v_2;
pub use swap_v_2::{
    swap_v_2_ix, swap_v_2_ix_with_program_id, SwapV2IxData, SwapV2Keys, SWAP_V_2_IX_ACCOUNTS_LEN,
    SWAP_V_2_IX_DISCM,
};
pub mod transfer_owner;
pub use transfer_owner::{
    transfer_owner_ix, transfer_owner_ix_with_program_id, TransferOwnerIxData, TransferOwnerKeys,
    TRANSFER_OWNER_IX_ACCOUNTS_LEN, TRANSFER_OWNER_IX_DISCM,
};
pub mod unpause;
pub use unpause::{
    unpause_ix, unpause_ix_with_program_id, UnpauseIxData, UnpauseKeys, UNPAUSE_IX_ACCOUNTS_LEN,
    UNPAUSE_IX_DISCM,
};
pub mod withdraw;
pub use withdraw::{
    withdraw_ix, withdraw_ix_with_program_id, WithdrawIxData, WithdrawKeys,
    WITHDRAW_IX_ACCOUNTS_LEN, WITHDRAW_IX_DISCM,
};
