//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-16
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

//!Type: TimeInForceEvent (NonAnchor)
#[allow(unused_imports)]
use solana_pubkey::Pubkey;
pub const TIME_IN_FORCE_EVENT_TYPE_DISCM: u8 = 10u8;
#[derive(borsh::BorshDeserialize, borsh::BorshSerialize, Clone, Debug, PartialEq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct TimeInForceEvent {
    pub index: u16,
    #[cfg_attr(feature = "serde", serde(rename = "orderSequenceNumber"))]
    pub order_sequence_number: u64,
    #[cfg_attr(feature = "serde", serde(rename = "lastValidSlot"))]
    pub last_valid_slot: u64,
    #[cfg_attr(feature = "serde", serde(rename = "lastValidUnixTimestampInSeconds"))]
    pub last_valid_unix_timestamp_in_seconds: u64,
}
impl Default for TimeInForceEvent {
    fn default() -> Self {
        Self {
            index: Default::default(),
            order_sequence_number: Default::default(),
            last_valid_slot: Default::default(),
            last_valid_unix_timestamp_in_seconds: Default::default(),
        }
    }
}
impl TimeInForceEvent {
    pub fn try_to_vec(&self) -> std::io::Result<Vec<u8>> {
        borsh::to_vec(self)
    }
    pub fn from_bytes(data: &[u8]) -> Result<Self, std::io::Error> {
        borsh::from_slice(data)
            .map_err(|e| std::io::Error::new(std::io::ErrorKind::InvalidData, e.to_string()))
    }
}
