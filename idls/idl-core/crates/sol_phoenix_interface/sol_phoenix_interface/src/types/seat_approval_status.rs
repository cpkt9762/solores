//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-16
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

//!Type: SeatApprovalStatus (NonAnchor)
#[allow(unused_imports)]
use solana_pubkey::Pubkey;
pub const SEAT_APPROVAL_STATUS_TYPE_DISCM: u8 = 26u8;
#[derive(borsh::BorshDeserialize, borsh::BorshSerialize, Clone, Debug, PartialEq)]
#[borsh(use_discriminant = false)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[repr(u8)]
pub enum SeatApprovalStatus {
    NotApproved,
    Approved,
    Retired,
}
impl Default for SeatApprovalStatus {
    fn default() -> Self {
        Self::NotApproved
    }
}
impl SeatApprovalStatus {
    pub fn try_to_vec(&self) -> std::io::Result<Vec<u8>> {
        borsh::to_vec(self)
    }
    pub fn from_bytes(data: &[u8]) -> Result<Self, std::io::Error> {
        borsh::from_slice(data)
            .map_err(|e| std::io::Error::new(std::io::ErrorKind::InvalidData, e.to_string()))
    }
}
