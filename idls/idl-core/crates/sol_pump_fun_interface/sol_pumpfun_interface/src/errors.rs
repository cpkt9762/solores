//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-15
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

#![doc = concat!("Anchor", " error definitions module")]
//!Generated error enums and conversion implementations
///Custom errors for the pumpfun program
#[derive(Clone, Copy, Debug, Eq, thiserror::Error, num_derive::FromPrimitive, PartialEq)]
pub enum PumpfunError {
    ///6000 - The given account is not authorized to execute this instruction.
    #[error("The given account is not authorized to execute this instruction.")]
    NotAuthorized = 6000isize,
    ///6001 - The program is already initialized.
    #[error("The program is already initialized.")]
    AlreadyInitialized = 6001isize,
    ///6002 - slippage: Too much SOL required to buy the given amount of tokens.
    #[error("slippage: Too much SOL required to buy the given amount of tokens.")]
    TooMuchSolRequired = 6002isize,
    ///6003 - slippage: Too little SOL received to sell the given amount of tokens.
    #[error("slippage: Too little SOL received to sell the given amount of tokens.")]
    TooLittleSolReceived = 6003isize,
    ///6004 - The mint does not match the bonding curve.
    #[error("The mint does not match the bonding curve.")]
    MintDoesNotMatchBondingCurve = 6004isize,
    ///6005 - The bonding curve has completed and liquidity migrated to raydium.
    #[error("The bonding curve has completed and liquidity migrated to raydium.")]
    BondingCurveComplete = 6005isize,
    ///6006 - The bonding curve has not completed.
    #[error("The bonding curve has not completed.")]
    BondingCurveNotComplete = 6006isize,
    ///6007 - The program is not initialized.
    #[error("The program is not initialized.")]
    NotInitialized = 6007isize,
}
impl From<PumpfunError> for solana_program_error::ProgramError {
    fn from(e: PumpfunError) -> Self {
        solana_program_error::ProgramError::Custom(e as u32)
    }
}
