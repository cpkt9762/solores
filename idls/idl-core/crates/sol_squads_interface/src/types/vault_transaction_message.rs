//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-16
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

//!VaultTransactionMessage
#[allow(unused_imports)]
use solana_pubkey::Pubkey;
#[derive(borsh::BorshDeserialize, borsh::BorshSerialize, Clone, Debug, PartialEq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct VaultTransactionMessage {
    ///The number of signer pubkeys in the account_keys vec.
    #[cfg_attr(feature = "serde", serde(rename = "numSigners"))]
    pub num_signers: u8,
    ///The number of writable signer pubkeys in the account_keys vec.
    #[cfg_attr(feature = "serde", serde(rename = "numWritableSigners"))]
    pub num_writable_signers: u8,
    ///The number of writable non-signer pubkeys in the account_keys vec.
    #[cfg_attr(feature = "serde", serde(rename = "numWritableNonSigners"))]
    pub num_writable_non_signers: u8,
    ///Unique account pubkeys (including program IDs) required for execution of the tx.
    ///The signer pubkeys appear at the beginning of the vec, with writable pubkeys first, and read-only pubkeys following.
    ///The non-signer pubkeys follow with writable pubkeys first and read-only ones following.
    ///Program IDs are also stored at the end of the vec along with other non-signer non-writable pubkeys:
    ///```plaintext
    ///[pubkey1, pubkey2, pubkey3, pubkey4, pubkey5, pubkey6, pubkey7, pubkey8]
    ///|---writable---|  |---readonly---|  |---writable---|  |---readonly---|
    ///|------------signers-------------|  |----------non-singers-----------|
    ///```
    #[cfg_attr(feature = "serde", serde(rename = "accountKeys"))]
    pub account_keys: Vec<Pubkey>,
    ///List of instructions making up the tx.
    pub instructions: Vec<crate::types::MultisigCompiledInstruction>,
    ///List of address table lookups used to load additional accounts
    ///for this transaction.
    #[cfg_attr(feature = "serde", serde(rename = "addressTableLookups"))]
    pub address_table_lookups: Vec<crate::types::MultisigMessageAddressTableLookup>,
}
impl Default for VaultTransactionMessage {
    fn default() -> Self {
        Self {
            num_signers: Default::default(),
            num_writable_signers: Default::default(),
            num_writable_non_signers: Default::default(),
            account_keys: Default::default(),
            instructions: Default::default(),
            address_table_lookups: Default::default(),
        }
    }
}
impl VaultTransactionMessage {
    pub fn try_to_vec(&self) -> std::io::Result<Vec<u8>> {
        borsh::to_vec(self)
    }
    pub fn from_bytes(data: &[u8]) -> Result<Self, std::io::Error> {
        borsh::from_slice(data)
            .map_err(|e| std::io::Error::new(std::io::ErrorKind::InvalidData, e.to_string()))
    }
}
