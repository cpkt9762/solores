//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-16
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

//!MultisigMessageAddressTableLookup
///Address table lookups describe an on-chain address lookup table to use
///for loading more readonly and writable accounts into a transaction.
#[allow(unused_imports)]
use solana_pubkey::Pubkey;
///Address table lookups describe an on-chain address lookup table to use
///for loading more readonly and writable accounts into a transaction.
#[derive(borsh::BorshDeserialize, borsh::BorshSerialize, Clone, Debug, PartialEq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct MultisigMessageAddressTableLookup {
    ///Address lookup table account key.
    #[cfg_attr(feature = "serde", serde(rename = "accountKey"))]
    #[cfg_attr(
        feature = "serde",
        serde(with = "serde_with::As::<serde_with::DisplayFromStr>")
    )]
    pub account_key: Pubkey,
    ///List of indexes used to load writable accounts.
    #[cfg_attr(feature = "serde", serde(rename = "writableIndexes"))]
    pub writable_indexes: bytes,
    ///List of indexes used to load readonly accounts.
    #[cfg_attr(feature = "serde", serde(rename = "readonlyIndexes"))]
    pub readonly_indexes: bytes,
}
impl Default for MultisigMessageAddressTableLookup {
    fn default() -> Self {
        Self {
            account_key: Default::default(),
            writable_indexes: Default::default(),
            readonly_indexes: Default::default(),
        }
    }
}
impl MultisigMessageAddressTableLookup {
    pub fn try_to_vec(&self) -> std::io::Result<Vec<u8>> {
        borsh::to_vec(self)
    }
    pub fn from_bytes(data: &[u8]) -> Result<Self, std::io::Error> {
        borsh::from_slice(data)
            .map_err(|e| std::io::Error::new(std::io::ErrorKind::InvalidData, e.to_string()))
    }
}
