//! {{ crate_name }} Instructions  
//! Non-Anchor style instructions with 1-byte discriminators

use borsh::{BorshDeserialize, BorshSerialize};
use solana_program::pubkey::Pubkey;

{%- for instruction in instructions %}

{%- if instruction.docs %}
/// {{ instruction.docs }}
{%- endif %}
#[derive(BorshDeserialize, BorshSerialize, Clone, Debug, PartialEq)]
pub struct {{ instruction.name }}IxData {
    {%- for field in instruction.fields %}
    {%- if field.docs %}
    /// {{ field.docs }}
    {%- endif %}
    pub {{ field.name }}: {{ field.rust_type }},
    {%- endfor %}
}

impl {{ instruction.name }}IxData {
    /// Instruction discriminator (1 byte for non-Anchor)
    pub const DISCRIMINATOR: u8 = {{ instruction.discriminator }};
    
    /// Create new instruction data
    pub fn new(
        {%- for field in instruction.fields %}
        {{ field.name }}: {{ field.rust_type }},
        {%- endfor %}
    ) -> Self {
        Self {
            {%- for field in instruction.fields %}
            {{ field.name }},
            {%- endfor %}
        }
    }
}

{%- endfor %}