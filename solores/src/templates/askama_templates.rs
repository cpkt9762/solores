//! Askama 模板结构体定义
//!
//! 简单内联模板版本，用于验证 Askama 集成

use askama::Template;

/// 简单测试模板 - 生成基本的lib.rs文件
#[derive(Template)]
#[template(
    source = r#"//! {{ crate_name }} - Solana program interface
//! Auto-generated by Solores (Askama)

use borsh::{BorshDeserialize, BorshSerialize};
use solana_pubkey::Pubkey;

/// Program ID
pub const PROGRAM_ID: &str = "{{ program_id }}";

/// Program ID as Pubkey
pub static ID: Pubkey = solana_pubkey::pubkey!("{{ program_id }}");

#[cfg(test)]
mod tests {
    use super::*;
    
    #[test]
    fn test_program_id() {
        assert_eq!(PROGRAM_ID, "{{ program_id }}");
    }
}
"#,
    ext = "txt"
)]
pub struct SimpleLibTemplate {
    pub crate_name: String,
    pub program_id: String,
}

// ===== 数据结构 =====

/// 指令数据
#[derive(Clone, Debug)]
pub struct InstructionData {
    pub name: String,
    pub docs: Option<String>,
    pub discriminator: String,  // "[1,2,3,4,5,6,7,8]" 或 "42"
    pub fields: Vec<FieldData>,
    pub accounts: Vec<AccountData>,
}

/// 字段数据
#[derive(Clone, Debug)]
pub struct FieldData {
    pub name: String,
    pub docs: Option<String>,
    pub rust_type: String,
    pub is_pubkey: bool,
    pub is_option: bool,
    pub is_array: bool,
}

/// 账户数据
#[derive(Clone, Debug)]
pub struct AccountData {
    pub name: String,
    pub docs: Option<String>,
    pub is_signer: bool,
    pub is_mut: bool,
    pub fields: Vec<FieldData>,  // 账户字段
    pub discriminator: Option<String>,  // 账户discriminator (仅Anchor)
}

/// 事件数据
#[derive(Clone, Debug)]
pub struct EventData {
    pub name: String,
    pub docs: Option<String>,
    pub fields: Vec<FieldData>,
}

/// 类型数据
#[derive(Clone, Debug)]
pub struct TypeData {
    pub name: String,
    pub docs: Option<String>,
    pub kind: String,  // "struct", "enum"
    pub fields: Vec<FieldData>,     // 结构体字段
    pub variants: Vec<VariantData>, // 枚举变体
}

/// 枚举变体数据
#[derive(Clone, Debug)]
pub struct VariantData {
    pub name: String,
    pub docs: Option<String>,
    pub fields: Vec<FieldData>,
}