//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use borsh::{BorshDeserialize, BorshSerialize};
use solana_program::pubkey::Pubkey;
#[derive(Clone, Debug, BorshDeserialize, BorshSerialize, PartialEq, Eq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct Vault {
    pub admin: Pubkey,
    ///PDA of pool programs seeded by vault address
    pub withdraw_authority: Pubkey,
    ///bump seed of withdraw_authority PDA
    pub withdraw_authority_bump: u8,
    ///bump seed of vault_authority PDA
    pub authority_bump: u8,
    pub is_active: bool,
    pub beneficiary: Pubkey,
    pub beneficiary_fee: u64,
    pub pending_admin: Option<Pubkey>,
}
impl Default for Vault {
    fn default() -> Self {
        Self {
            admin: Default::default(),
            withdraw_authority: Default::default(),
            withdraw_authority_bump: Default::default(),
            authority_bump: Default::default(),
            is_active: Default::default(),
            beneficiary: Default::default(),
            beneficiary_fee: Default::default(),
            pending_admin: None,
        }
    }
}
