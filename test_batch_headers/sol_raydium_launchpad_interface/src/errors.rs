//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use solana_program::program_error::ProgramError;
use thiserror::Error;
///Custom errors for the raydium_launchpad program
#[derive(Clone, Copy, Debug, Eq, Error, num_derive::FromPrimitive, PartialEq)]
pub enum RaydiumLaunchpadError {
    ///6000 - Not approved
    #[error("Not approved")]
    NotApproved = 6000,
    ///6001 - Input account owner is not the program address
    #[error("Input account owner is not the program address")]
    InvalidOwner = 6001,
    ///6002 - InvalidInput
    #[error("InvalidInput")]
    InvalidInput = 6002,
    ///6003 - The input params are not match with curve type in config
    #[error("The input params are not match with curve type in config")]
    InputNotMatchCurveConfig = 6003,
    ///6004 - Exceeds desired slippage limit
    #[error("Exceeds desired slippage limit")]
    ExceededSlippage = 6004,
    ///6005 - Pool funding
    #[error("Pool funding")]
    PoolFunding = 6005,
    ///6006 - Pool migrated
    #[error("Pool migrated")]
    PoolMigrated = 6006,
    ///6007 - Migrate type not match
    #[error("Migrate type not match")]
    MigrateTypeNotMatch = 6007,
    ///6008 - Math overflow
    #[error("Math overflow")]
    MathOverflow = 6008,
    ///6009 - No assets to collect
    #[error("No assets to collect")]
    NoAssetsToCollect = 6009,
    ///6010 - Vesting ratio too high
    #[error("Vesting ratio too high")]
    VestingRatioTooHigh = 6010,
    ///6011 - Vesting setting ended
    #[error("Vesting setting ended")]
    VestingSettingEnded = 6011,
    ///6012 - Vesting not started
    #[error("Vesting not started")]
    VestingNotStarted = 6012,
    ///6013 - No vesting schedule
    #[error("No vesting schedule")]
    NoVestingSchedule = 6013,
    ///6014 - The platform info input is invalid
    #[error("The platform info input is invalid")]
    InvalidPlatformInfo = 6014,
    ///6015 - Pool not migrated
    #[error("Pool not migrated")]
    PoolNotMigrated = 6015,
}
impl From<RaydiumLaunchpadError> for ProgramError {
    fn from(e: RaydiumLaunchpadError) -> Self {
        ProgramError::Custom(e as u32)
    }
}
