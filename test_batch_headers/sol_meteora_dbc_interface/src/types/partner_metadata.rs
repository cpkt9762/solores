//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use borsh::{BorshDeserialize, BorshSerialize};
use solana_program::pubkey::Pubkey;
///Metadata for a partner.
#[derive(Clone, Debug, BorshDeserialize, BorshSerialize, PartialEq, Eq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct PartnerMetadata {
    ///fee claimer
    pub fee_claimer: Pubkey,
    ///padding for future use
    pub padding: [u128; 6],
    ///Name of partner.
    pub name: String,
    ///Website of partner.
    pub website: String,
    ///Logo of partner
    pub logo: String,
}
impl Default for PartnerMetadata {
    fn default() -> Self {
        Self {
            fee_claimer: Default::default(),
            padding: core::array::from_fn(|_| Default::default()),
            name: Default::default(),
            website: Default::default(),
            logo: Default::default(),
        }
    }
}
