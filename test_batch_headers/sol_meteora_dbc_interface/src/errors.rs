//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use solana_program::program_error::ProgramError;
use thiserror::Error;
///Custom errors for the meteora_dbc program
#[derive(Clone, Copy, Debug, Eq, Error, num_derive::FromPrimitive, PartialEq)]
pub enum MeteoraDbcError {
    ///6000 - Math operation overflow
    #[error("Math operation overflow")]
    MathOverflow = 6000,
    ///6001 - Invalid fee setup
    #[error("Invalid fee setup")]
    InvalidFee = 6001,
    ///6002 - Exceeded slippage tolerance
    #[error("Exceeded slippage tolerance")]
    ExceededSlippage = 6002,
    ///6003 - Exceeded max fee bps
    #[error("Exceeded max fee bps")]
    ExceedMaxFeeBps = 6003,
    ///6004 - Invalid admin
    #[error("Invalid admin")]
    InvalidAdmin = 6004,
    ///6005 - Amount is zero
    #[error("Amount is zero")]
    AmountIsZero = 6005,
    ///6006 - Type cast error
    #[error("Type cast error")]
    TypeCastFailed = 6006,
    ///6007 - Invalid activation type
    #[error("Invalid activation type")]
    InvalidActivationType = 6007,
    ///6008 - Invalid quote mint
    #[error("Invalid quote mint")]
    InvalidQuoteMint = 6008,
    ///6009 - Invalid collect fee mode
    #[error("Invalid collect fee mode")]
    InvalidCollectFeeMode = 6009,
    ///6010 - Invalid migration fee option
    #[error("Invalid migration fee option")]
    InvalidMigrationFeeOption = 6010,
    ///6011 - Invalid input
    #[error("Invalid input")]
    InvalidInput = 6011,
    ///6012 - Not enough liquidity
    #[error("Not enough liquidity")]
    NotEnoughLiquidity = 6012,
    ///6013 - Pool is completed
    #[error("Pool is completed")]
    PoolIsCompleted = 6013,
    ///6014 - Pool is incompleted
    #[error("Pool is incompleted")]
    PoolIsIncompleted = 6014,
    ///6015 - Invalid migration option
    #[error("Invalid migration option")]
    InvalidMigrationOption = 6015,
    ///6016 - Invalid activation type
    #[error("Invalid activation type")]
    InvalidTokenDecimals = 6016,
    ///6017 - Invalid token type
    #[error("Invalid token type")]
    InvalidTokenType = 6017,
    ///6018 - Invalid fee percentage
    #[error("Invalid fee percentage")]
    InvalidFeePercentage = 6018,
    ///6019 - Invalid quote threshold
    #[error("Invalid quote threshold")]
    InvalidQuoteThreshold = 6019,
    ///6020 - Invalid token supply
    #[error("Invalid token supply")]
    InvalidTokenSupply = 6020,
    ///6021 - Invalid curve
    #[error("Invalid curve")]
    InvalidCurve = 6021,
    ///6022 - Not permit to do this action
    #[error("Not permit to do this action")]
    NotPermitToDoThisAction = 6022,
    ///6023 - Invalid owner account
    #[error("Invalid owner account")]
    InvalidOwnerAccount = 6023,
    ///6024 - Invalid config account
    #[error("Invalid config account")]
    InvalidConfigAccount = 6024,
    ///6025 - Surplus has been withdraw
    #[error("Surplus has been withdraw")]
    SurplusHasBeenWithdraw = 6025,
    ///6026 - Leftover has been withdraw
    #[error("Leftover has been withdraw")]
    LeftoverHasBeenWithdraw = 6026,
    ///6027 - Total base token is exceeded max supply
    #[error("Total base token is exceeded max supply")]
    TotalBaseTokenExceedMaxSupply = 6027,
    ///6028 - Unsupport native mint token 2022
    #[error("Unsupport native mint token 2022")]
    UnsupportNativeMintToken2022 = 6028,
    ///6029 - Insufficient liquidity for migration
    #[error("Insufficient liquidity for migration")]
    InsufficientLiquidityForMigration = 6029,
    ///6030 - Missing pool config in remaining account
    #[error("Missing pool config in remaining account")]
    MissingPoolConfigInRemainingAccount = 6030,
    ///6031 - Invalid vesting parameters
    #[error("Invalid vesting parameters")]
    InvalidVestingParameters = 6031,
    ///6032 - Invalid leftover address
    #[error("Invalid leftover address")]
    InvalidLeftoverAddress = 6032,
    ///6033 - Swap amount is over a threshold
    #[error("Swap amount is over a threshold")]
    SwapAmountIsOverAThreshold = 6033,
    ///6034 - Invalid fee scheduler
    #[error("Invalid fee scheduler")]
    InvalidFeeScheduler = 6034,
    ///6035 - Invalid creator trading fee percentage
    #[error("Invalid creator trading fee percentage")]
    InvalidCreatorTradingFeePercentage = 6035,
    ///6036 - Invalid new creator
    #[error("Invalid new creator")]
    InvalidNewCreator = 6036,
    ///6037 - Invalid token update authority option
    #[error("Invalid token update authority option")]
    InvalidTokenUpdateAuthorityOption = 6037,
    ///6038 - Invalid account for the instruction
    #[error("Invalid account for the instruction")]
    InvalidAccount = 6038,
    ///6039 - Invalid migrator fee percentage
    #[error("Invalid migrator fee percentage")]
    InvalidMigratorFeePercentage = 6039,
    ///6040 - Migration fee has been withdraw
    #[error("Migration fee has been withdraw")]
    MigrationFeeHasBeenWithdraw = 6040,
    ///6041 - Invalid base fee mode
    #[error("Invalid base fee mode")]
    InvalidBaseFeeMode = 6041,
    ///6042 - Invalid fee rate limiter
    #[error("Invalid fee rate limiter")]
    InvalidFeeRateLimiter = 6042,
    ///6043 - Fail to validate single swap instruction in rate limiter
    #[error("Fail to validate single swap instruction in rate limiter")]
    FailToValidateSingleSwapInstruction = 6043,
}
impl From<MeteoraDbcError> for ProgramError {
    fn from(e: MeteoraDbcError) -> Self {
        ProgramError::Custom(e as u32)
    }
}
