//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use borsh::{BorshDeserialize, BorshSerialize};
use solana_program::pubkey::Pubkey;
#[derive(Clone, Debug, BorshDeserialize, BorshSerialize, PartialEq, Eq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct ConfigParams {
    pub migration_authority: Option<Pubkey>,
    pub backend_authority: Option<Pubkey>,
    pub config_authority: Option<Pubkey>,
    pub helio_fee: Option<Pubkey>,
    pub dex_fee: Option<Pubkey>,
    pub fee_bps: Option<u16>,
    pub dex_fee_share: Option<u8>,
    pub migration_fee: Option<u64>,
    pub marketcap_threshold: Option<u64>,
    pub marketcap_currency: Option<u8>,
    pub min_supported_decimal_places: Option<u8>,
    pub max_supported_decimal_places: Option<u8>,
    pub min_supported_token_supply: Option<u64>,
    pub max_supported_token_supply: Option<u64>,
    pub coef_b: Option<u32>,
}
impl Default for ConfigParams {
    fn default() -> Self {
        Self {
            migration_authority: None,
            backend_authority: None,
            config_authority: None,
            helio_fee: None,
            dex_fee: None,
            fee_bps: None,
            dex_fee_share: None,
            migration_fee: None,
            marketcap_threshold: None,
            marketcap_currency: None,
            min_supported_decimal_places: None,
            max_supported_decimal_places: None,
            min_supported_token_supply: None,
            max_supported_token_supply: None,
            coef_b: None,
        }
    }
}
