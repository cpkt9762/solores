//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use crate::FeeTier;
use crate::OrderType;
use crate::SelfTradeBehavior;
use crate::Side;
use borsh::{BorshDeserialize, BorshSerialize};
#[derive(Clone, Debug, BorshDeserialize, BorshSerialize, PartialEq, Eq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub enum RequestView {
    NewOrder {
        side: Side,
        order_type: OrderType,
        owner_slot: u8,
        fee_tier: FeeTier,
        order_id: u128,
        max_coin_qty: u64,
        native_pc_qty_locked: Option<u64>,
        owner: [u64; 4],
        client_order_id: Option<u64>,
        self_trade_behavior: SelfTradeBehavior,
    },
    CancelOrder {
        side: Side,
        order_id: u128,
        cancel_id: u64,
        expected_owner_slot: u8,
        expected_owner: [u64; 4],
        client_order_id: Option<u64>,
    },
}
impl Default for RequestView {
    fn default() -> Self {
        Self::NewOrder {
            side: Default::default(),
            order_type: Default::default(),
            owner_slot: Default::default(),
            fee_tier: Default::default(),
            order_id: Default::default(),
            max_coin_qty: Default::default(),
            native_pc_qty_locked: Default::default(),
            owner: Default::default(),
            client_order_id: Default::default(),
            self_trade_behavior: Default::default(),
        }
    }
}
