//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use solana_program::program_error::ProgramError;
use thiserror::Error;
///Custom errors for the pumpfun program
#[derive(Clone, Copy, Debug, Eq, Error, num_derive::FromPrimitive, PartialEq)]
pub enum PumpfunError {
    ///6000 - The given account is not authorized to execute this instruction.
    #[error("The given account is not authorized to execute this instruction.")]
    NotAuthorized = 6000,
    ///6001 - The program is already initialized.
    #[error("The program is already initialized.")]
    AlreadyInitialized = 6001,
    ///6002 - slippage: Too much SOL required to buy the given amount of tokens.
    #[error("slippage: Too much SOL required to buy the given amount of tokens.")]
    TooMuchSolRequired = 6002,
    ///6003 - slippage: Too little SOL received to sell the given amount of tokens.
    #[error("slippage: Too little SOL received to sell the given amount of tokens.")]
    TooLittleSolReceived = 6003,
    ///6004 - The mint does not match the bonding curve.
    #[error("The mint does not match the bonding curve.")]
    MintDoesNotMatchBondingCurve = 6004,
    ///6005 - The bonding curve has completed and liquidity migrated to raydium.
    #[error("The bonding curve has completed and liquidity migrated to raydium.")]
    BondingCurveComplete = 6005,
    ///6006 - The bonding curve has not completed.
    #[error("The bonding curve has not completed.")]
    BondingCurveNotComplete = 6006,
    ///6007 - The program is not initialized.
    #[error("The program is not initialized.")]
    NotInitialized = 6007,
}
impl From<PumpfunError> for ProgramError {
    fn from(e: PumpfunError) -> Self {
        ProgramError::Custom(e as u32)
    }
}
