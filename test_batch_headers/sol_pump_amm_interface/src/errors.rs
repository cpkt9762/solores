//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use solana_program::program_error::ProgramError;
use thiserror::Error;
///Custom errors for the pump_amm program
#[derive(Clone, Copy, Debug, Eq, Error, num_derive::FromPrimitive, PartialEq)]
pub enum PumpAmmError {
    ///6000 - FeeBasisPointsExceedsMaximum
    #[error("FeeBasisPointsExceedsMaximum")]
    FeeBasisPointsExceedsMaximum = 6000,
    ///6001 - ZeroBaseAmount
    #[error("ZeroBaseAmount")]
    ZeroBaseAmount = 6001,
    ///6002 - ZeroQuoteAmount
    #[error("ZeroQuoteAmount")]
    ZeroQuoteAmount = 6002,
    ///6003 - TooLittlePoolTokenLiquidity
    #[error("TooLittlePoolTokenLiquidity")]
    TooLittlePoolTokenLiquidity = 6003,
    ///6004 - ExceededSlippage
    #[error("ExceededSlippage")]
    ExceededSlippage = 6004,
    ///6005 - InvalidAdmin
    #[error("InvalidAdmin")]
    InvalidAdmin = 6005,
    ///6006 - UnsupportedBaseMint
    #[error("UnsupportedBaseMint")]
    UnsupportedBaseMint = 6006,
    ///6007 - UnsupportedQuoteMint
    #[error("UnsupportedQuoteMint")]
    UnsupportedQuoteMint = 6007,
    ///6008 - InvalidBaseMint
    #[error("InvalidBaseMint")]
    InvalidBaseMint = 6008,
    ///6009 - InvalidQuoteMint
    #[error("InvalidQuoteMint")]
    InvalidQuoteMint = 6009,
    ///6010 - InvalidLpMint
    #[error("InvalidLpMint")]
    InvalidLpMint = 6010,
    ///6011 - AllProtocolFeeRecipientsShouldBeNonZero
    #[error("AllProtocolFeeRecipientsShouldBeNonZero")]
    AllProtocolFeeRecipientsShouldBeNonZero = 6011,
    ///6012 - UnsortedNotUniqueProtocolFeeRecipients
    #[error("UnsortedNotUniqueProtocolFeeRecipients")]
    UnsortedNotUniqueProtocolFeeRecipients = 6012,
    ///6013 - InvalidProtocolFeeRecipient
    #[error("InvalidProtocolFeeRecipient")]
    InvalidProtocolFeeRecipient = 6013,
    ///6014 - InvalidPoolBaseTokenAccount
    #[error("InvalidPoolBaseTokenAccount")]
    InvalidPoolBaseTokenAccount = 6014,
    ///6015 - InvalidPoolQuoteTokenAccount
    #[error("InvalidPoolQuoteTokenAccount")]
    InvalidPoolQuoteTokenAccount = 6015,
    ///6016 - BuyMoreBaseAmountThanPoolReserves
    #[error("BuyMoreBaseAmountThanPoolReserves")]
    BuyMoreBaseAmountThanPoolReserves = 6016,
    ///6017 - DisabledCreatePool
    #[error("DisabledCreatePool")]
    DisabledCreatePool = 6017,
    ///6018 - DisabledDeposit
    #[error("DisabledDeposit")]
    DisabledDeposit = 6018,
    ///6019 - DisabledWithdraw
    #[error("DisabledWithdraw")]
    DisabledWithdraw = 6019,
    ///6020 - DisabledBuy
    #[error("DisabledBuy")]
    DisabledBuy = 6020,
    ///6021 - DisabledSell
    #[error("DisabledSell")]
    DisabledSell = 6021,
    ///6022 - SameMint
    #[error("SameMint")]
    SameMint = 6022,
    ///6023 - Overflow
    #[error("Overflow")]
    Overflow = 6023,
    ///6024 - Truncation
    #[error("Truncation")]
    Truncation = 6024,
    ///6025 - DivisionByZero
    #[error("DivisionByZero")]
    DivisionByZero = 6025,
    ///6026 - NewSizeLessThanCurrentSize
    #[error("NewSizeLessThanCurrentSize")]
    NewSizeLessThanCurrentSize = 6026,
    ///6027 - AccountTypeNotSupported
    #[error("AccountTypeNotSupported")]
    AccountTypeNotSupported = 6027,
    ///6028 - OnlyCanonicalPumpPoolsCanHaveCoinCreator
    #[error("OnlyCanonicalPumpPoolsCanHaveCoinCreator")]
    OnlyCanonicalPumpPoolsCanHaveCoinCreator = 6028,
}
impl From<PumpAmmError> for ProgramError {
    fn from(e: PumpAmmError) -> Self {
        ProgramError::Custom(e as u32)
    }
}
