//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use crate::MarketSizeParams;
use crate::TokenParams;
use borsh::{BorshDeserialize, BorshSerialize};
use solana_program::pubkey::Pubkey;
#[derive(Clone, Debug, BorshDeserialize, BorshSerialize, PartialEq, Eq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct MarketHeader {
    pub discriminant_value: u64,
    pub status: u64,
    pub market_size_params: MarketSizeParams,
    pub base_params: TokenParams,
    pub base_lot_size: u64,
    pub quote_params: TokenParams,
    pub quote_lot_size: u64,
    pub tick_size_in_quote_atoms_per_base_unit: u64,
    pub authority: Pubkey,
    pub fee_recipient: Pubkey,
    pub market_sequence_number: u64,
    pub successor: Pubkey,
    pub raw_base_units_per_base_unit: u32,
    pub padding1: u32,
    pub padding2: [u64; 32],
}
impl Default for MarketHeader {
    fn default() -> Self {
        Self {
            discriminant_value: Default::default(),
            status: Default::default(),
            market_size_params: Default::default(),
            base_params: Default::default(),
            base_lot_size: Default::default(),
            quote_params: Default::default(),
            quote_lot_size: Default::default(),
            tick_size_in_quote_atoms_per_base_unit: Default::default(),
            authority: Pubkey::default(),
            fee_recipient: Pubkey::default(),
            market_sequence_number: Default::default(),
            successor: Pubkey::default(),
            raw_base_units_per_base_unit: Default::default(),
            padding1: Default::default(),
            padding2: [Default::default(); 32],
        }
    }
}
