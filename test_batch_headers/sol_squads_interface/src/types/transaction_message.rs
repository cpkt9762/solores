//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use borsh::{BorshDeserialize, BorshSerialize};
///Unvalidated instruction data, must be treated as untrusted.
#[derive(Clone, Debug, BorshDeserialize, BorshSerialize, PartialEq, Eq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct TransactionMessage {
    ///The number of signer pubkeys in the account_keys vec.
    pub num_signers: u8,
    ///The number of writable signer pubkeys in the account_keys vec.
    pub num_writable_signers: u8,
    ///The number of writable non-signer pubkeys in the account_keys vec.
    pub num_writable_non_signers: u8,
    ///The list of unique account public keys (including program IDs) that will be used in the provided instructions.
    pub account_keys: Vec<u8>,
    ///The list of instructions to execute.
    pub instructions: Vec<u8>,
    ///List of address table lookups used to load additional accounts
    ///for this transaction.
    pub address_table_lookups: Vec<u8>,
}
impl Default for TransactionMessage {
    fn default() -> Self {
        Self {
            num_signers: Default::default(),
            num_writable_signers: Default::default(),
            num_writable_non_signers: Default::default(),
            account_keys: Default::default(),
            instructions: Default::default(),
            address_table_lookups: Default::default(),
        }
    }
}
