//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use super::*;
///Event emitted by BondingCurveDeployedEvent
#[derive(Clone, Debug, BorshDeserialize, BorshSerialize, PartialEq, Eq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct BondingCurveDeployedEvent {
    pub mint: Pubkey,
    pub creator: Pubkey,
}
pub const BONDING_CURVE_DEPLOYED_EVENT_EVENT_DISCM: [u8; 8] = [225, 80, 178, 34, 217, 39, 184, 148];
///Event wrapper for BondingCurveDeployedEvent with discriminator for serialization
#[derive(Clone, Debug, PartialEq)]
pub struct BondingCurveDeployedEventEvent(pub BondingCurveDeployedEvent);
impl BorshSerialize for BondingCurveDeployedEventEvent {
    fn serialize<W: std::io::Write>(&self, writer: &mut W) -> std::io::Result<()> {
        BONDING_CURVE_DEPLOYED_EVENT_EVENT_DISCM.serialize(writer)?;
        self.0.serialize(writer)
    }
}
impl BondingCurveDeployedEventEvent {
    pub fn deserialize(buf: &mut &[u8]) -> std::io::Result<Self> {
        let maybe_discm = <[u8; 8]>::deserialize(buf)?;
        if maybe_discm != BONDING_CURVE_DEPLOYED_EVENT_EVENT_DISCM {
            return Err(std::io::Error::new(
                std::io::ErrorKind::Other,
                format!(
                    "discm does not match. Expected: {:?}. Received: {:?}",
                    BONDING_CURVE_DEPLOYED_EVENT_EVENT_DISCM, maybe_discm
                ),
            ));
        }
        Ok(Self(BondingCurveDeployedEvent::deserialize(buf)?))
    }
}
