//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use borsh::{BorshDeserialize, BorshSerialize};
use solana_program::pubkey::Pubkey;
///Holds the current owner of the factory
#[derive(Clone, Debug, BorshDeserialize, BorshSerialize, PartialEq, Eq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct AmmConfig {
    ///Bump to identify PDA
    pub bump: u8,
    ///Status to control if new pool can be create
    pub disable_create_pool: bool,
    ///Config index
    pub index: u16,
    ///The trade fee, denominated in hundredths of a bip (10^-6)
    pub trade_fee_rate: u64,
    ///The protocol fee
    pub protocol_fee_rate: u64,
    ///The fund fee, denominated in hundredths of a bip (10^-6)
    pub fund_fee_rate: u64,
    ///Fee for create a new pool
    pub create_pool_fee: u64,
    ///Address of the protocol fee owner
    pub protocol_owner: Pubkey,
    ///Address of the fund fee owner
    pub fund_owner: Pubkey,
    ///padding
    pub padding: [u64; 16],
}
impl Default for AmmConfig {
    fn default() -> Self {
        Self {
            bump: Default::default(),
            disable_create_pool: Default::default(),
            index: Default::default(),
            trade_fee_rate: Default::default(),
            protocol_fee_rate: Default::default(),
            fund_fee_rate: Default::default(),
            create_pool_fee: Default::default(),
            protocol_owner: Default::default(),
            fund_owner: Default::default(),
            padding: [Default::default(); 16],
        }
    }
}
