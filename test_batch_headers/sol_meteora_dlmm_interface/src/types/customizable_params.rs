//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use borsh::{BorshDeserialize, BorshSerialize};
#[derive(Clone, Debug, BorshDeserialize, BorshSerialize, PartialEq, Eq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct CustomizableParams {
    ///Pool price
    pub active_id: i32,
    ///Bin step
    pub bin_step: u16,
    ///Base factor
    pub base_factor: u16,
    ///Activation type. 0 = Slot, 1 = Time. Check ActivationType enum
    pub activation_type: u8,
    ///Whether the pool has an alpha vault
    pub has_alpha_vault: bool,
    ///Decide when does the pool start trade. None = Now
    pub activation_point: Option<u64>,
    ///Padding, for future use
    pub padding: [u8; 64],
}
impl Default for CustomizableParams {
    fn default() -> Self {
        Self {
            active_id: Default::default(),
            bin_step: Default::default(),
            base_factor: Default::default(),
            activation_type: Default::default(),
            has_alpha_vault: Default::default(),
            activation_point: None,
            padding: [Default::default(); 64],
        }
    }
}
