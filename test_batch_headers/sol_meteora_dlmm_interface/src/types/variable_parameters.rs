//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use borsh::{BorshDeserialize, BorshSerialize};
///Parameters that changes based on dynamic of the market
#[derive(Clone, Debug, BorshDeserialize, BorshSerialize, PartialEq, Eq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct VariableParameters {
    ///Volatility accumulator measure the number of bin crossed since reference bin ID. Normally (without filter period taken into consideration), reference bin ID is the active bin of last swap.
    ///It affects the variable fee rate
    pub volatility_accumulator: u32,
    ///Volatility reference is decayed volatility accumulator. It is always <= volatility_accumulator
    pub volatility_reference: u32,
    ///Active bin id of last swap.
    pub index_reference: i32,
    ///Padding for bytemuck safe alignment
    pub padding: [u8; 4],
    ///Last timestamp the variable parameters was updated
    pub last_update_timestamp: i64,
    ///Padding for bytemuck safe alignment
    pub padding1: [u8; 8],
}
impl Default for VariableParameters {
    fn default() -> Self {
        Self {
            volatility_accumulator: Default::default(),
            volatility_reference: Default::default(),
            index_reference: Default::default(),
            padding: [Default::default(); 4],
            last_update_timestamp: Default::default(),
            padding1: [Default::default(); 8],
        }
    }
}
