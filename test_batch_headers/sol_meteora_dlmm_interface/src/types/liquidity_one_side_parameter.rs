//! This file was automatically generated by Solores
//! Solana IDL to Rust interface generator
//!
//! GitHub: https://github.com/cpkt9762/solores
//!
//! Generated on: 2025-08-06
//!
//! DO NOT EDIT - This file is auto-generated
//! Changes will be lost when regenerating from IDL

use crate::BinLiquidityDistributionByWeight;
use borsh::{BorshDeserialize, BorshSerialize};
#[derive(Clone, Debug, BorshDeserialize, BorshSerialize, PartialEq, Eq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct LiquidityOneSideParameter {
    ///Amount of X token or Y token to deposit
    pub amount: u64,
    ///Active bin that integrator observe off-chain
    pub active_id: i32,
    ///max active bin slippage allowed
    pub max_active_bin_slippage: i32,
    ///Liquidity distribution to each bins
    pub bin_liquidity_dist: Vec<BinLiquidityDistributionByWeight>,
}
impl Default for LiquidityOneSideParameter {
    fn default() -> Self {
        Self {
            amount: Default::default(),
            active_id: Default::default(),
            max_active_bin_slippage: Default::default(),
            bin_liquidity_dist: Vec::new(),
        }
    }
}
